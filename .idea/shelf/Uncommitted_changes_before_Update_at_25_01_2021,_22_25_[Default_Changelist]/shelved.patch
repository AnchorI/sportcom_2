Index: app.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const express = require('express');\r\nconst bodyParser = require('body-parser');\r\n//const cors = require(\"cors\");\r\nconst product = require('./routes/product.route');\r\nconst categories = require(\"./routes/categories.route\");\r\nconst rider = require('./routes/rider.route');\r\nconst team = require('./routes/team.route');// Imports routes for the products\r\nconst cart = require('./routes/cart.route');\r\nconst views = require('./views/views');\r\nconst app = express();\r\n//const db = require(\"./models\");\r\n//const Role = db.role;\r\n// Set up mongoose connection\r\nconst mongoose = require('mongoose');\r\n\r\n//<------Cors-------->\r\n\r\n//let corsOptions = {\r\n//    origin: \"http://localhost:8081\" // Will changed on server ip:port\r\n//};\r\n\r\n//<------Cors-------->\r\n\r\n\r\n//<------MONGODB_CONNECT-------->\r\nlet dev_db_url = 'mongodb+srv://anchori:A1mBf0W3XL21nlLJ@sportcomdb.wsq9v.mongodb.net/sportcomdb?retryWrites=true&w=majority';\r\nlet mongoDB = process.env.MONGODB_URI || dev_db_url;\r\nmongoose.connect(mongoDB,{useNewUrlParser: true, useUnifiedTopology: true});\r\nmongoose.Promise = global.Promise;\r\n\r\nlet dbb = mongoose.connection;\r\ndbb.on('error', console.error.bind(console, 'MongoDB connection error:'));\r\n//<------MONGODB_CONNECT-------->\r\n\r\n// <-------app.use----->\r\n// Use Node.js body parsing middleware\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({extended: true}));\r\n\r\napp.use('/products', product);\r\napp.use('/',views);\r\napp.use('/categories', categories);\r\napp.use('/rider', rider);\r\napp.use('/team', team);\r\napp.use('/cart', cart);\r\n\r\n\r\n//<--------AddRolesToDB------->\r\n// This part of script for auto-create roles in new Project, mb in the future take out from app.js\r\n/*\r\nfunction   initial() {\r\n    Role.estimatedDocumentCount((err, count) => {\r\n        if (!err && count === 0) {\r\n            new Role({\r\n                name: \"user\"\r\n            }).save(err => {\r\n                if (err) {\r\n                    console.log(\"error\", err);\r\n                }\r\n\r\n                console.log(\"added 'user' to roles collection\");\r\n            });\r\n\r\n            new Role({\r\n                name: \"moderator\"\r\n            }).save(err => {\r\n                if (err) {\r\n                    console.log(\"error\", err);\r\n                }\r\n\r\n                console.log(\"added 'moderator' to roles collection\");\r\n            });\r\n\r\n            new Role({\r\n                name: \"admin\"\r\n            }).save(err => {\r\n                if (err) {\r\n                    console.log(\"error\", err);\r\n                }\r\n\r\n                console.log(\"added 'admin' to roles collection\");\r\n            });\r\n        }\r\n    });\r\n}*/\r\n//<--------AddRolesToDB------->\r\nrequire('./routes/auth.routes')(app);\r\nrequire('./routes/user.routes')(app);\r\n//<---------Port-------->\r\nlet port = 1234;\r\napp.listen(port, () => {\r\n    console.log('Server is up and running on port number ' + port);\r\n});
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app.js b/app.js
--- a/app.js	(revision 03b1be604f63b78afd1b4a6393765d39976519cc)
+++ b/app.js	(date 1611600980932)
@@ -1,6 +1,6 @@
 const express = require('express');
 const bodyParser = require('body-parser');
-//const cors = require("cors");
+const cors = require("cors");
 const product = require('./routes/product.route');
 const categories = require("./routes/categories.route");
 const rider = require('./routes/rider.route');
@@ -15,9 +15,10 @@
 
 //<------Cors-------->
 
-//let corsOptions = {
-//    origin: "http://localhost:8081" // Will changed on server ip:port
-//};
+// let corsOptions = {
+app.use(cors({origin: 'http://localhost:8888'}));
+//origin: "http://localhost:8081" // Will changed on server ip:port
+// };
 
 //<------Cors-------->
 
Index: models/rider.model.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const mongoose = require(\"mongoose\");\n\nconst Rider = mongoose.model(\n    \"rider\",\n    new mongoose.Schema({\n        name: {type: String, required: true, max: 40},\n        position: {type: Number},\n        title: {type: String},\n        description: {type: String}\n    })\n);\n\nmodule.exports = Rider;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/models/rider.model.js b/models/rider.model.js
--- a/models/rider.model.js	(revision 03b1be604f63b78afd1b4a6393765d39976519cc)
+++ b/models/rider.model.js	(date 1611600980938)
@@ -4,9 +4,8 @@
     "rider",
     new mongoose.Schema({
         name: {type: String, required: true, max: 40},
-        position: {type: Number},
         title: {type: String},
-        description: {type: String}
+        description: {type: String},
     })
 );
 
Index: controllers/cart.controllers.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const Cart = require('../models/cart.model');\n\n\n//Simple version, without validation or sanitation\nexports.cart_get = function (req, res) {\n    Cart.find(req.params.id, function (err, product) {\n        if (err) return console.log(err);\n        console.log(product);\n        res.set('Access-Control-Allow-Origin', '*')\n        res.send(product);\n    })\n};\n//<----------Create Cart------------>\nexports.cart_create = function (req,res){\n    let product = new Cart(\n        {\n            name: req.body.name,\n            phone: req.body.phone,\n            title: req.body.title,\n            data: [{\n                eename :req.body.eename,\n                id : req.body.id,\n                img :req.body.img\n            }]\n\n        }\n    );\n//<---------------------Just Test---------------->\n    product.save(function (err){\n        if (err) {\n            return console.log(err);\n        }\n        res.send('Cart Created successfully')\n    })\n};\n//<------------Find by ID------------->\nexports.cart_details = function (req, res) {\n    Cart.findById(req.params.id, function (err, product) {\n        if (err) return console.log(err);\n        console.log(product);\n        res.set('Access-Control-Allow-Origin', '*');\n        res.send(product);\n    })\n};\n//<------------Update-------------->\nexports.cart_update = function (req, res) {\n    Cart.findByIdAndUpdate(req.params.id, {$set: req.body}, function (err) {\n        if (err) return console.log(err);\n        res.send('Cart udpated.');\n    });\n};\n//<------------Delete-------------->\n\nexports.cart_delete = function (req, res) {\n    Cart.findByIdAndRemove(req.params.id, function (err) {\n        if (err) return console.log(err);\n        res.send('Deleted successfully!');\n    })\n};\n\n\n//<----------------HTTP------------->\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/controllers/cart.controllers.js b/controllers/cart.controllers.js
--- a/controllers/cart.controllers.js	(revision 03b1be604f63b78afd1b4a6393765d39976519cc)
+++ b/controllers/cart.controllers.js	(date 1611600980944)
@@ -17,12 +17,8 @@
             name: req.body.name,
             phone: req.body.phone,
             title: req.body.title,
-            data: [{
-                eename :req.body.eename,
-                id : req.body.id,
-                img :req.body.img
-            }]
-
+            description: req.body.description,
+            data: req.body.data,
         }
     );
 //<---------------------Just Test---------------->
Index: controllers/rider.controller.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const Rider = require(\"../models/rider.model\");\n\n\n//<------------GET------------>\nexports.rider_get = function (req, res) {\n    Rider.find(req.params.id, function (err, rider) {\n        if (err) return console.log(err);\n        console.log(rider);\n        res.set('Access-Control-Allow-Origin', '*')\n        res.send(rider);\n    })\n};\n\n//<---------POST_CREATE----------->\n\nexports.rider_create = function (req,res){\n    let rider = new Rider(\n        {\n            name: req.body.name,\n            position: req.body.position,\n            title: req.body.title,\n            description: req.body.description,\n        }\n    );\n    rider.save(function (err){\n        if (err) {\n            return console.log(err);\n        }\n        res.send('Rider Created successfully')\n    })\n};\n\n//<------------Find by ID------------->\nexports.rider_details = function (req, res) {\n    Rider.findById(req.params.id, function (err, rider) {\n        if (err) return console.log(err);\n        console.log(rider);\n        res.set('Access-Control-Allow-Origin', '*');\n        res.send(rider);\n    })\n};\n//<------------Update-------------->\nexports.rider_update = function (req, res) {\n    Rider.findByIdAndUpdate(req.params.id, {$set: req.body}, function (err, rider) {\n        if (err) return console.log(err);\n        res.send('Rider udpated.');\n        res.send(rider);\n    });\n};\n//<------------Delete-------------->\n\nexports.rider_delete = function (req, res) {\n    Rider.findByIdAndRemove(req.params.id, function (err) {\n        if (err) return console.log(err);\n        res.send('Rider Deleted successfully!');\n    })\n};\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/controllers/rider.controller.js b/controllers/rider.controller.js
--- a/controllers/rider.controller.js	(revision 03b1be604f63b78afd1b4a6393765d39976519cc)
+++ b/controllers/rider.controller.js	(date 1611600980949)
@@ -6,7 +6,11 @@
     Rider.find(req.params.id, function (err, rider) {
         if (err) return console.log(err);
         console.log(rider);
-        res.set('Access-Control-Allow-Origin', '*')
+        res.set('Access-Control-Allow-Origin', '*');
+        // res.set('Access-Control-Allow-Methods', 'OPTIONS, POST, GET, PUT');
+        // res.set('Access-Control-Allow-Headers', 'x-requested-with');
+        // res.set('Access-Control-Allow-Credentials', 'true');
+
         res.send(rider);
     })
 };
@@ -17,7 +21,6 @@
     let rider = new Rider(
         {
             name: req.body.name,
-            position: req.body.position,
             title: req.body.title,
             description: req.body.description,
         }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"24a32287-3c81-4741-a9fb-9b3210754091\" name=\"Default Changelist\" comment=\"fix cart create 3\">\n      <change beforePath=\"$PROJECT_DIR$/app.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app.js\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ChangesViewManager\" show_ignored=\"true\" />\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"JavaScript File\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectId\" id=\"1mgVvaVBs0HnVrALLR8q5qyAT9w\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"dart.analysis.tool.window.visible\" value=\"false\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\n    <property name=\"node.js.path.for.package.eslint\" value=\"project\" />\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"project.propVCSSupport.Mappings\" />\n    <property name=\"vue.rearranger.settings.migration\" value=\"true\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\AnchorI\\Desktop\\Develop\\Git\\sportcom_2\\views\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"24a32287-3c81-4741-a9fb-9b3210754091\" name=\"Default Changelist\" comment=\"\" />\n      <created>1609915453870</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1609915453870</updated>\n      <workItem from=\"1609915455303\" duration=\"791000\" />\n      <workItem from=\"1610203308314\" duration=\"547000\" />\n      <workItem from=\"1610204922146\" duration=\"605000\" />\n      <workItem from=\"1610205539909\" duration=\"6821000\" />\n      <workItem from=\"1610371844219\" duration=\"595000\" />\n      <workItem from=\"1610382789416\" duration=\"348000\" />\n      <workItem from=\"1610396142862\" duration=\"2284000\" />\n      <workItem from=\"1610462905515\" duration=\"1039000\" />\n      <workItem from=\"1610548132680\" duration=\"2375000\" />\n      <workItem from=\"1610904190926\" duration=\"3080000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Change DB setting (Used QR code)\">\n      <created>1610207692638</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1610207692638</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Create CRUD for &quot;Riders, Categories, Team&quot;&#10;&#10;API in app.js\">\n      <created>1610210696153</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1610210696153</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Fix trouble with cart in Back\">\n      <created>1610611631634</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1610611631634</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Comment initial()\">\n      <created>1610644335919</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1610644335919</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"fix cart API\">\n      <created>1610904844589</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1610904844589</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"fix cart API 2\">\n      <created>1610907385601</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1610907385602</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"fix cart create\">\n      <created>1610907481316</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1610907481316</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"fix cart create 2\">\n      <created>1610908593712</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1610908593712</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"fix cart create 3\">\n      <created>1610909666480</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1610909666480</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"10\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Change DB setting (Used QR code)\" />\n    <MESSAGE value=\"Create CRUD for &quot;Riders, Categories, Team&quot;\" />\n    <MESSAGE value=\"Create CRUD for &quot;Riders, Categories, Team&quot;&#10;&#10;API in app.js\" />\n    <MESSAGE value=\"Fix trouble with cart in Back\" />\n    <MESSAGE value=\"Comment initial()\" />\n    <MESSAGE value=\"fix cart API\" />\n    <MESSAGE value=\"fix cart API 2\" />\n    <MESSAGE value=\"fix cart create\" />\n    <MESSAGE value=\"fix cart create 2\" />\n    <MESSAGE value=\"fix cart create 3\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"fix cart create 3\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 03b1be604f63b78afd1b4a6393765d39976519cc)
+++ b/.idea/workspace.xml	(date 1611602729915)
@@ -1,8 +1,14 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="24a32287-3c81-4741-a9fb-9b3210754091" name="Default Changelist" comment="fix cart create 3">
+    <list default="true" id="24a32287-3c81-4741-a9fb-9b3210754091" name="Default Changelist" comment="fix cart create 3.1">
+      <change afterPath="$PROJECT_DIR$/client/js_scripts/checkout.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/app.js" beforeDir="false" afterPath="$PROJECT_DIR$/app.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/controllers/cart.controllers.js" beforeDir="false" afterPath="$PROJECT_DIR$/controllers/cart.controllers.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/controllers/rider.controller.js" beforeDir="false" afterPath="$PROJECT_DIR$/controllers/rider.controller.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/models/cart.model.js" beforeDir="false" afterPath="$PROJECT_DIR$/models/cart.model.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/models/rider.model.js" beforeDir="false" afterPath="$PROJECT_DIR$/models/rider.model.js" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -48,9 +54,21 @@
   </component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/client/public" />
+      <recent name="$PROJECT_DIR$/client/src/component" />
       <recent name="C:\Users\AnchorI\Desktop\Develop\Git\sportcom_2\views" />
     </key>
   </component>
+  <component name="RunManager">
+    <configuration name="create.post.cart.js" type="NodeJSConfigurationType" temporary="true" nameIsGenerated="true" path-to-js-file="$PROJECT_DIR$/client/js_scripts/create.post.cart.js" working-dir="$PROJECT_DIR$/client/js_scripts">
+      <method v="2" />
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Node.js.create.post.cart.js" />
+      </list>
+    </recent_temporary>
+  </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
@@ -68,7 +86,9 @@
       <workItem from="1610396142862" duration="2284000" />
       <workItem from="1610462905515" duration="1039000" />
       <workItem from="1610548132680" duration="2375000" />
-      <workItem from="1610904190926" duration="3080000" />
+      <workItem from="1610904190926" duration="12151000" />
+      <workItem from="1611173114067" duration="4441000" />
+      <workItem from="1611595174558" duration="1015000" />
     </task>
     <task id="LOCAL-00001" summary="Change DB setting (Used QR code)">
       <created>1610207692638</created>
@@ -133,7 +153,14 @@
       <option name="project" value="LOCAL" />
       <updated>1610909666480</updated>
     </task>
-    <option name="localTasksCounter" value="10" />
+    <task id="LOCAL-00010" summary="fix cart create 3.1">
+      <created>1610909714151</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL-00010" />
+      <option name="project" value="LOCAL" />
+      <updated>1610909714151</updated>
+    </task>
+    <option name="localTasksCounter" value="11" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -162,6 +189,7 @@
     <MESSAGE value="fix cart create" />
     <MESSAGE value="fix cart create 2" />
     <MESSAGE value="fix cart create 3" />
-    <option name="LAST_COMMIT_MESSAGE" value="fix cart create 3" />
+    <MESSAGE value="fix cart create 3.1" />
+    <option name="LAST_COMMIT_MESSAGE" value="fix cart create 3.1" />
   </component>
 </project>
\ No newline at end of file
Index: models/cart.model.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const mongoose = require(\"mongoose\");\n\nconst Cart = mongoose.model(\n    \"cart\",\n    new mongoose.Schema({\n        name: {type: String, max: 50},\n        phone: {type: String, max: 20},\n        title: {type: String},\n        description: {type: String},\n        data: [{\n                eename: String,\n                id: String,\n                img: String,\n                }]\n\n    })\n);\n\nmodule.exports = Cart;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/models/cart.model.js b/models/cart.model.js
--- a/models/cart.model.js	(revision 03b1be604f63b78afd1b4a6393765d39976519cc)
+++ b/models/cart.model.js	(date 1611600980966)
@@ -7,11 +7,7 @@
         phone: {type: String, max: 20},
         title: {type: String},
         description: {type: String},
-        data: [{
-                eename: String,
-                id: String,
-                img: String,
-                }]
+        data: {type: Object},
 
     })
 );
diff --git a/client/js_scripts/checkout.js b/client/js_scripts/checkout.js
new file mode 100644
